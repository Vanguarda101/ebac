{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T04:46:24.701Z",
    "end": "2023-05-29T04:46:25.007Z",
    "duration": 306,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "93a9cd0c-5c13-49c0-9a5c-eb177ef07db9",
      "title": "",
      "fullFile": "cypress/integration/exercicio-api.spec.js",
      "file": "cypress/integration/exercicio-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  return _user.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "fe97d788-06bb-42fe-81dc-402d6199cf89",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "614e84cc-64c4-47ee-a36a-445977365e79",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": name1 + ' ' + faker.name.lastName(),\n    \"email\": faker.internet.email(name1),\n    \"password\": faker.internet.password(),\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n});",
              "err": {},
              "uuid": "6c64f80d-1dc6-4475-86b3-3affef0e56b5",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": name1 + ' ' + faker.name.lastName(),\n    \"email\": \"teste erro esperado\",\n    \"password\": faker.internet.password(),\n    \"administrador\": \"true\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n});",
              "err": {},
              "uuid": "40ff61f8-effe-4b9e-a124-38b05aaef591",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\nvar name = name1 + ' ' + faker.name.lastName();\nvar email = faker.internet.email(name1);\nvar password = faker.internet.password();\nvar admFlag = \"true\";\ncy.cadastrarUsuario(name, email, password, admFlag).then(response => {\n  var id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": name,\n      \"email\": faker.internet.email(name1),\n      \"password\": faker.internet.password(),\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "dbdf7484-f9d0-4c54-8c0c-a0487218a3ba",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\nvar name = name1 + ' ' + faker.name.lastName();\nvar email = faker.internet.email(name1);\nvar password = faker.internet.password();\nvar admFlag = \"true\";\ncy.cadastrarUsuario(name, email, password, admFlag).then(response => {\n  var id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "ed554d18-e611-45aa-a042-20f5a22519b2",
              "parentUUID": "4339ffb8-8bcb-4c0d-b35e-120c71d4a4b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe97d788-06bb-42fe-81dc-402d6199cf89",
            "614e84cc-64c4-47ee-a36a-445977365e79",
            "6c64f80d-1dc6-4475-86b3-3affef0e56b5",
            "40ff61f8-effe-4b9e-a124-38b05aaef591",
            "dbdf7484-f9d0-4c54-8c0c-a0487218a3ba",
            "ed554d18-e611-45aa-a042-20f5a22519b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}