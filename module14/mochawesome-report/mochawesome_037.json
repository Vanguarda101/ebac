{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T04:37:59.420Z",
    "end": "2023-05-29T04:37:59.715Z",
    "duration": 295,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eaab3441-f893-47af-83d7-0fc95218cdb9",
      "title": "",
      "fullFile": "cypress/integration/exercicio-api.spec.js",
      "file": "cypress/integration/exercicio-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  return _user.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "36d24945-f986-4016-868b-dd2524319ceb",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "49358e8d-0b3e-475e-9ea6-5386ca6d4b32",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": name1 + ' ' + faker.name.lastName(),\n    \"email\": faker.internet.email(name1),\n    \"password\": faker.internet.password(),\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n});",
              "err": {},
              "uuid": "2eb560a2-8a39-46a8-b2df-32306a1a2582",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": name1 + ' ' + faker.name.lastName(),\n    \"email\": \"teste erro esperado\",\n    \"password\": faker.internet.password(),\n    \"administrador\": \"true\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n});",
              "err": {},
              "uuid": "b08f2b57-7528-43c8-b6be-87747ff62a52",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\nvar name = name1 + ' ' + faker.name.lastName();\nvar email = faker.internet.email(name1);\nvar password = faker.internet.password();\nvar admFlag = \"true\";\ncy.cadastrarUsuario(name, email, password, admFlag).then(response => {\n  var id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": name,\n      \"email\": faker.internet.email(name1),\n      \"password\": faker.internet.password(),\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "46f3837b-0a99-41ab-9547-45cacf5c9e73",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var faker = __webpack_require__(/*! faker-br */ \"./node_modules/faker-br/index.js\");\nvar name1 = faker.name.firstName();\nvar name = name1 + ' ' + faker.name.lastName();\nvar email = faker.internet.email(name1);\nvar password = faker.internet.password();\nvar admFlag = \"true\";\ncy.cadastrarUsuario(name, email, password, admFlag).then(response => {\n  var id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "e0304bb7-3d47-46b2-a12b-73c25b85f51b",
              "parentUUID": "fec57289-f9d6-40a3-9f09-13e9a26f839a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36d24945-f986-4016-868b-dd2524319ceb",
            "49358e8d-0b3e-475e-9ea6-5386ca6d4b32",
            "2eb560a2-8a39-46a8-b2df-32306a1a2582",
            "b08f2b57-7528-43c8-b6be-87747ff62a52",
            "46f3837b-0a99-41ab-9547-45cacf5c9e73",
            "e0304bb7-3d47-46b2-a12b-73c25b85f51b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}